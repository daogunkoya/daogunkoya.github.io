{"version":3,"sources":["webpack:///./src/app/banks/bank/bank.component.css","webpack:///./src/app/banks/bank/bank.component.html","webpack:///./src/app/banks/bank/bank.component.ts","webpack:///./src/app/banks/banks-list/banks-list.component.css","webpack:///./src/app/banks/banks-list/banks-list.component.html","webpack:///./src/app/banks/banks-list/banks-list.component.ts","webpack:///./src/app/banks/banks-routing.module.ts","webpack:///./src/app/banks/banks.component.css","webpack:///./src/app/banks/banks.component.html","webpack:///./src/app/banks/banks.component.ts","webpack:///./src/app/banks/banks.module.ts"],"names":[],"mappings":"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","file":"banks-banks-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JhbmtzL2JhbmsvYmFuay5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"text-center col-sm-8 col-sm-offset-1\\\">\\n    <div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h6>Banks For Transaction</h6>\\n    </div>\\n    \\n    <p class = \\\"bg-danger\\\"  *ngIf=\\\"!bankForm.get('bankData.name').valid && bankForm.get('bankData.name').touched\\\">Entry is Invalid</p>\\n  <form  (ngSubmit) = \\\"submit()\\\" [formGroup]=\\\"bankForm\\\">\\n    <div class=\\\"panel-body\\\" formGroupName = \\\"bankData\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-md-offset-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Bank\\\">Select Type</label>\\n            <select\\n                id=\\\"status\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"status\\\">\\n                <option selected [value]=\\\"newstatus\\\">{{newstatus}}</option>\\n                 \\n              </select>\\n              </div>\\n            </div>\\n           \\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-7 col-md-offset-2\\\">\\n              <div class=\\\"form-group form-group-sm\\\">\\n                <label for=\\\"New Bank\\\">New Bank</label>\\n                <input \\n                    class=\\\"form-control col-md-12 btn-block\\\"\\n                    placeholder=\\\"New Bank\\\" \\n                    formControlName= \\\"name\\\"\\n                    type=\\\"text\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <p></p>\\n          <div class=\\\"row\\\">\\n          <button \\n              [disabled] = \\\"!bankForm.valid && !bankForm.touched\\\"\\n              class=\\\"btn btn-primary col-md-12 btn-block\\\"\\n               > \\n              Submit</button>\\n    </div>\\n\\n       \\n    </div>\\n  </form>\\n  </div>\\n</div>\\n</div>\\n\"","\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport {BanksService} from '../banks.service'\nimport {Bank} from '../bank.model'\nimport { Data, ActivatedRoute, Router, Params } from '@angular/router';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-bank',\n  templateUrl: './bank.component.html',\n  styleUrls: ['./bank.component.css']\n})\nexport class BankComponent implements OnInit {\n  newstatus:string = \"showman\"\n bankForm:FormGroup\n    bank:Bank;\n\n      constructor(\n        private bankService:BanksService,\n        private route:ActivatedRoute,\n        private router:Router) {\n      }\n        ngOnInit() {\n          \n          this.bankForm = new FormGroup({\n           'bankData' :new FormGroup({\n            'name':new FormControl(null,[Validators.required]),\n            'status':new FormControl(null,[Validators.required]),\n           })\n          })\n\n        if( this.route.snapshot.params['id']){\n           this.route.params.subscribe((params:Params) =>{\n              let bankSelected = this.bankService.getBank(+params['id'])\n                console.log('bank',bankSelected)\n                    if(bankSelected){\n                      this.bankForm.setValue({\n                        bankData:\n                            {name:bankSelected.name,\n                            status:bankSelected.status}\n                      })\n                    }\n             // })\n           })\n          \n        \n\n         }\n          \n    }\n    submit(){\n      console.log('form',this.bankForm.value)\n        this.route.params.subscribe((params:Params)=>{\n          const bk = {id:null,\n                      name:this.bankForm.value.bankData.name ,\n                      status:this.bankForm.value.bankData.status,\n                      created_at:null,\n                    updated_at:null};\n            if(!params['id']){\n              this.bankService.addBank(bk)\n            }else{\n              this.bankService.updateBank(+params['id'],bk)\n            }\n            this.bankForm.reset()\n        })\n    }\n\n   \n  }\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JhbmtzL2JhbmtzLWxpc3QvYmFua3MtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<a [routerLink] = \\\"['create']\\\" class = \\\"btn btn-primary\\\">New bank</a>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-md-offset-1\\\">\\n    <table class = \\\"table table-bordered table-striped\\\">\\n        <thead>\\n          <th>No</th>\\n          <th>Banks</th>\\n          <th>Types</th>\\n          \\n          <th>Actions</th>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor = \\\"let bank of banks;let i = index\\\">\\n                <td>{{i + 1}}</td>\\n                <td>{{bank.name}}</td>\\n                <td>{{bank.status}}</td>\\n              \\n                \\n                <td>\\n                  <a [routerLink]=\\\"[i ,'edit']\\\" class= \\\"btn btn-default\\\">Edits</a>\\n                  <a (click)=\\\"deleteBank(i)\\\" class= \\\"btn btn-danger\\\">Delete</a>\\n                </td>\\n            </tr>\\n        </tbody>     \\n      </table>\\n      </div>\\n    </div>\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport {Bank} from '../bank.model'\nimport {BanksService} from '../banks.service'\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-banks-list',\n  templateUrl: './banks-list.component.html',\n  styleUrls: ['./banks-list.component.css']\n})\nexport class BanksListComponent implements OnInit {\n@Input('banks') banks:Bank [];\n    private subscription:Subscription\n  constructor(private bankService:BanksService) { }\n\n  ngOnInit() {\n\n    //this.banks =  this.bankService.getBanks()\n  }\n\n  deleteBank(id:number){\n    console.log('id=',id)\n    this.bankService.deleteBank(id)\n    \n    }\n\n    \n   \n    \n  \n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BanksComponent } from './banks.component';\r\nimport { BankComponent } from './bank/bank.component';\r\nimport { BankResolver } from './bank-resolver.service';\r\n\r\nconst banksRoutes:Routes = [\r\n    {path:'', component: BanksComponent,\r\n     children:[\r\n        {path:'create', component:BankComponent},\r\n        {path:':id/edit', component:BankComponent,resolve:{bank:BankResolver}}\r\n      ]}\r\n]\r\n@NgModule({\r\n    imports:[\r\n        RouterModule.forChild(banksRoutes)\r\n    ],\r\n    exports:[\r\n        RouterModule\r\n    ]\r\n})\r\nexport class BanksRoutingModule{}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JhbmtzL2JhbmtzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class = \\\"col-md-12\\\">\\n        <div class = \\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <router-outlet></router-outlet>\\n          </div>\\n        </div>\\n        <div class = \\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <app-banks-list [banks] = \\\"banks\\\"></app-banks-list>\\n          </div>\\n        </div>\\n  </div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {BanksService} from './banks.service'\nimport {Bank} from './bank.model'\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-banks',\n  templateUrl: './banks.component.html',\n  styleUrls: ['./banks.component.css']\n})\nexport class BanksComponent implements OnInit,OnDestroy {\nbanks: Bank []\nsubscription:Subscription\n  constructor(private banksService:BanksService) { }\n\n  ngOnInit() {\n    this.subscription = this.banksService.bankChange\n                      .subscribe((banks:Bank[])=>{\n                          this.banks = banks\n                      })\n     this.banks = this.banksService.getBanks();\n  }\n  ngOnDestroy(){\n    this.subscription.unsubscribe\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BanksComponent } from './banks.component';\r\nimport { BankComponent } from './bank/bank.component';\r\nimport { BanksRoutingModule } from './banks-routing.module';\r\nimport { BanksListComponent } from './banks-list/banks-list.component';\r\n\r\n@NgModule({\r\n   declarations:[\r\n    BanksComponent,\r\n    BanksListComponent,\r\n    BankComponent\r\n   ],\r\n   imports:[\r\n        CommonModule,\r\n         FormsModule,\r\n         ReactiveFormsModule,\r\n        BanksRoutingModule,\r\n     \r\n]\r\n})\r\nexport class BanksModule {}\r\n\r\n"],"sourceRoot":""}